:const jumpHeight -15
:const gravityStrength 2

:alias playerX v0
:alias playerY v1
:alias dx v2
:alias dy v3
:alias prevX v4
:alias temp v5
:alias partialDY v6
:alias jumpAvailable v7
:alias bgx v8
:alias bgy v9
:alias bgTicker va

: main
	hires
	loop
		checkScrolling
		input
		drawAmy 
		checkCollisionH 
		gravity
		checkCollisionV
		delayFPS
		drawAmy
	again
;

: checkScrolling
	# when player gets too far down, scroll up and draw more level 
	if playerY > 30 begin
		scroll
	end
;

: input
	# store the previous x position in case of collision
	prevX := playerX
	temp := 5 
	if temp key then if jumpAvailable == 1 begin
		jumpAvailable := 0
		dy := jumpHeight
	end
	temp := 7 if temp key then playerX += -1
	temp := 9 if temp key then playerX += 1
;

: drawAmy
	i := amy
	sprite playerX playerY 6
;

: checkCollisionH
	if vf == 1 begin
		drawAmy
		playerX := prevX
		drawAmy
	end
;

: gravity
	dy += gravityStrength
;

: checkCollisionV
	# temp is the direction the player is traveling

	# partialDY is shifted right twice from actual DY.
	# partialDY is what's actually used to calculate the new position.
	# this is so dy can be increased or decreased more finely
	# might want to do that same with playerY also?

	# < 128 is (probably) positive and > 128 is (probably) negative

	if dy < 128 begin
		temp := 1
		partialDY >>= dy 
		partialDY >>= partialDY
	end 

	if dy > 128 begin
		temp := -1
		partialDY >>= dy
		partialDY >>= partialDY
		partialDY += 0b11000000
	end
	
	if partialDY == 0 then return

	# collide slowly-
	# undraw amy, redraw amy one pixel in the y direction and see if she collides
	# if she ever does, revert back one position and exit
	
	loop	
		drawAmy
		partialDY -= temp
		playerY += temp
		drawAmy
		if vf != 0 begin
			if temp == 1 then jumpAvailable := 1
			dy := 0
			drawAmy
			playerY -= temp
			drawAmy
			return
		end
	if partialDY != 0 then again
;

: delayFPS
	# delay loop to lock framerate and prevent flicker
	loop
		temp := delay
		if temp != 0 then again
	temp := 3
	delay := temp
;

: scroll
	playerY += -30
	scroll-up 15
	scroll-up 15
	drawBG
;

: drawBG
	# drawing pixels to walk on!
	i := main
	temp := random 0b0001111
	i += temp
	temp := 0
	bgx := 0
	if bgTicker == 1 then bgx := 16
	bgy := 54
	loop
		sprite bgx bgy 8
		bgx += 8
		temp += 1
	if temp < 14 then again
	temp := bgTicker
	bgTicker := 1
	bgTicker -= temp
;

: amy
0b111
0b010
0b111
0b111
0b101
0b101

